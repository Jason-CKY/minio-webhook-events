
services:
  api:
    container_name: api
    build:
      context: .
      dockerfile: ./deploy/app/Dockerfile
      target: dev
    environment:
      log_level: DEBUG
      S3_HOST: http://minio:9000
      S3_USERNAME: minioadmin
      S3_PASSWORD: minioadmin
      S3_BUCKET_NAME: events
    ports:
      - "8000:8000"
    volumes:
      - ./src/app:/code/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio: 
    container_name: minio
    image: minio/minio:RELEASE.2024-06-06T09-36-42Z
    ports:
      - "9000:9000"
      - "9001:9001"
    command: ["server", "/data", "--console-address", ":9001"]
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - minio-data:/data 
      - minio-queue:/queue

  setup-events:
    container_name: setup-minio-events
    image: minio/mc:RELEASE.2024-06-05T18-13-30Z
    entrypoint: "/bin/bash"
    command:
      - -c
      - |
        mc alias ls
        mc alias set minio1 http://minio:9000 minioadmin minioadmin
        mc alias ls
        mc mb minio1/events
        mc mb minio1/success
        mc mb minio1/failure
        mc admin config set minio1/ notify_webhook:service \
          endpoint="http://api:8000/minio/webhook" \
          queue_dir="/queue" \
          queue_limit="10000" 
        mc admin service restart minio1/
        mc event add minio1/events arn:minio:sqs::service:webhook --event put
    depends_on:
      minio:
        condition: service_healthy

volumes:
  minio-data:
  minio-queue:
